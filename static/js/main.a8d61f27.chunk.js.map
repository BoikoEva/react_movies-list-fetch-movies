{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","fetch","then","response","ok","Error","status","statusText","json","FindMovie","addMovie","useState","setMovie","setTitle","error","setError","findMovie","a","foundMovie","Object","keys","includes","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","App","state","data","some","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8d61f27.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=d71546d5&t=';\n\nexport const getMovie = title => fetch(`${API_URL}${title}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [movie, setMovie] = useState({});\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n\n  const handleChange = ({ target }) => {\n    setMovie({});\n    setTitle(target.value);\n    setError(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (movie) {\n      addMovie(movie);\n      setMovie({});\n      setTitle('');\n    }\n  };\n\n  const findMovie = async() => {\n    const foundMovie = await getMovie(title);\n\n    if (Object.keys(foundMovie).includes('Title')) {\n      setMovie({\n        title: foundMovie.Title,\n        description: foundMovie.Plot,\n        imgUrl: foundMovie.Poster,\n        imdbUrl: `https://www.imdb.com/title/${foundMovie.imdbID}`,\n        imdbId: foundMovie.imdbID,\n      });\n\n      return;\n    }\n\n    setError(true);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              value={title}\n              onChange={handleChange}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {Object.keys(movie).includes('title') && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    const { movies } = this.state;\n\n    if (!movies.some(({ imdbId }) => imdbId === movie.imdbId)) {\n      this.setState(state => ({\n        movies: [...state.movies, movie],\n      }));\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}